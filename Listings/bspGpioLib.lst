C51 COMPILER V9.54   BSPGPIOLIB                                                            12/06/2018 19:27:05 PAGE 1   


C51 COMPILER V9.54, COMPILATION OF MODULE BSPGPIOLIB
OBJECT MODULE PLACED IN .\Objects\bspGpioLib.obj
COMPILER INVOKED BY: d:\Keil_v5\C51\BIN\C51.EXE Src\bspGpioLib.c OPTIMIZE(8,SPEED) BROWSE DEBUG OBJECTEXTEND PRINT(.\Lis
                    -tings\bspGpioLib.lst) TABS(2) OBJECT(.\Objects\bspGpioLib.obj)

line level    source

   1          #include "bspGpioLib.h"
   2          
   3          
   4          void GPIO_Init(uint8_t GPIO_PX,GPIO_InitTypeDef *GPIO_InitStruct)
   5          {
   6   1        uint8_t RegM0 = 0;
   7   1        uint8_t RegM1 = 0;
   8   1        uint8_t ucBase = 0x01;
   9   1        uint8_t ucLoop = 0;
  10   1        switch(GPIO_PX)
  11   1        {
  12   2          case GPIO_P0:
  13   2            RegM0 = P0M0;
  14   2            RegM1 = P0M1;
  15   2            if(GPIO_Pin_All == GPIO_InitStruct->GPIO_Pin)
  16   2            {
  17   3              for(ucLoop = 0;ucLoop < 8;ucLoop++)
  18   3              {
  19   4                RegM0 &=~(0x01 << ucLoop);
  20   4                RegM1 &=~(0x01 << ucLoop);
  21   4                
  22   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
  23   4                RegM0 |= (ucBase << ucLoop);
  24   4                
  25   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
  26   4                RegM1 |= (ucBase << ucLoop);
  27   4              }
  28   3            }
  29   2            else
  30   2            {
  31   3              
  32   3              RegM0 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
  33   3              RegM1 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
  34   3              
  35   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
  36   3              RegM0 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
  37   3              
  38   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
  39   3              RegM1 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
  40   3      
  41   3            }
  42   2            P0M0 = RegM0;
  43   2            P0M1 = RegM1;
  44   2            break;
  45   2            
  46   2          case GPIO_P1:
  47   2            RegM0 = P1M0;
  48   2            RegM1 = P1M1;
  49   2            if(GPIO_Pin_All == GPIO_InitStruct->GPIO_Pin)
  50   2            {
  51   3              for(ucLoop = 0;ucLoop < 8;ucLoop++)
  52   3              {
  53   4                RegM0 &=~(0x01 << ucLoop);
  54   4                RegM1 &=~(0x01 << ucLoop);
C51 COMPILER V9.54   BSPGPIOLIB                                                            12/06/2018 19:27:05 PAGE 2   

  55   4                
  56   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
  57   4                RegM0 |= (ucBase << ucLoop);
  58   4                
  59   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
  60   4                RegM1 |= (ucBase << ucLoop);
  61   4              }
  62   3            }
  63   2            else
  64   2            {
  65   3              
  66   3              RegM0 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
  67   3              RegM1 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
  68   3              
  69   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
  70   3              RegM0 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
  71   3              
  72   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
  73   3              RegM1 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
  74   3      
  75   3            }
  76   2            P1M0 = RegM0;
  77   2            P1M1 = RegM1;
  78   2            break;
  79   2      
  80   2          case GPIO_P2:
  81   2            RegM0 = P2M0;
  82   2            RegM1 = P2M1;
  83   2            if(GPIO_Pin_All == GPIO_InitStruct->GPIO_Pin)
  84   2            {
  85   3              for(ucLoop = 0;ucLoop < 8;ucLoop++)
  86   3              {
  87   4                RegM0 &=~(0x01 << ucLoop);
  88   4                RegM1 &=~(0x01 << ucLoop);
  89   4                
  90   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
  91   4                RegM0 |= (ucBase << ucLoop);
  92   4                
  93   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
  94   4                RegM1 |= (ucBase << ucLoop);
  95   4              }
  96   3            }
  97   2            else
  98   2            {
  99   3              
 100   3              RegM0 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
 101   3              RegM1 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
 102   3              
 103   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
 104   3              RegM0 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
 105   3              
 106   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
 107   3              RegM1 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
 108   3      
 109   3            }
 110   2            P2M0 = RegM0;
 111   2            P2M1 = RegM1;
 112   2            break;
 113   2      
 114   2          case GPIO_P3:
 115   2            RegM0 = P3M0;
 116   2            RegM1 = P3M1;
C51 COMPILER V9.54   BSPGPIOLIB                                                            12/06/2018 19:27:05 PAGE 3   

 117   2            if(GPIO_Pin_All == GPIO_InitStruct->GPIO_Pin)
 118   2            {
 119   3              for(ucLoop = 0;ucLoop < 8;ucLoop++)
 120   3              {
 121   4                RegM0 &=~(0x01 << ucLoop);
 122   4                RegM1 &=~(0x01 << ucLoop);
 123   4                
 124   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
 125   4                RegM0 |= (ucBase << ucLoop);
 126   4                
 127   4                ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
 128   4                RegM1 |= (ucBase << ucLoop);
 129   4              }
 130   3            }
 131   2            else
 132   2            {
 133   3              
 134   3              RegM0 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
 135   3              RegM1 &=~(0x01 << GPIO_InitStruct->GPIO_Pin);
 136   3              
 137   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x01);
 138   3              RegM0 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
 139   3              
 140   3              ucBase = (GPIO_InitStruct->GPIO_Mode & 0x02) >> 1;
 141   3              RegM1 |= (ucBase << GPIO_InitStruct->GPIO_Pin);
 142   3      
 143   3            }
 144   2            P3M0 = RegM0;
 145   2            P3M1 = RegM1;
 146   2            break;
 147   2        }
 148   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    663    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----       1
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
